import{_ as s,c as n,o as a,a as l}from"./app.8207ecbb.js";const p="/blog/assets/2023-01-06-14-09-28.600f4f2f.png",o="/blog/assets/2023-01-06-14-09-39.55ff2a8d.png",e="/blog/assets/2023-01-06-14-09-53.922b64be.png",c="/blog/assets/2023-01-06-14-10-02.287bc62f.png",r="/blog/assets/2023-01-06-12-39-32.0dc2e5ed.png",t="/blog/assets/2023-01-06-12-40-13.74f836b6.png",B="/blog/assets/2023-01-06-12-41-12.a8997093.png",g=JSON.parse('{"title":"异步处理","description":"","frontmatter":{},"headers":[{"level":2,"title":"事件循环 eventLoop","slug":"事件循环-eventloop","link":"#事件循环-eventloop","children":[]},{"level":2,"title":"事件和回调函数缺陷","slug":"事件和回调函数缺陷","link":"#事件和回调函数缺陷","children":[]},{"level":2,"title":"异步处理的通用模型","slug":"异步处理的通用模型","link":"#异步处理的通用模型","children":[{"level":3,"title":"Promise A+","slug":"promise-a","link":"#promise-a","children":[]}]},{"level":2,"title":"Promise的基本使用","slug":"promise的基本使用","link":"#promise的基本使用","children":[]},{"level":2,"title":"Promise的串联","slug":"promise的串联","link":"#promise的串联","children":[]},{"level":2,"title":"Promise的其他API","slug":"promise的其他api","link":"#promise的其他api","children":[{"level":3,"title":"原型成员 (实例成员)","slug":"原型成员-实例成员","link":"#原型成员-实例成员","children":[]},{"level":3,"title":"构造函数成员 （静态成员）","slug":"构造函数成员-静态成员","link":"#构造函数成员-静态成员","children":[]}]},{"level":2,"title":"async和await","slug":"async和await","link":"#async和await","children":[{"level":3,"title":"async","slug":"async","link":"#async","children":[]},{"level":3,"title":"await","slug":"await","link":"#await","children":[]}]},{"level":2,"title":"再谈异步","slug":"再谈异步","link":"#再谈异步","children":[{"level":3,"title":"执行栈","slug":"执行栈","link":"#执行栈","children":[]}]},{"level":2,"title":"演练场","slug":"演练场","link":"#演练场","children":[{"level":3,"title":"怎样理解JS的异步？","slug":"怎样理解js的异步","link":"#怎样理解js的异步","children":[]},{"level":3,"title":"高仿setTimeout","slug":"高仿settimeout","link":"#高仿settimeout","children":[]},{"level":3,"title":"高仿setInterval","slug":"高仿setinterval","link":"#高仿setinterval","children":[]},{"level":3,"title":"如何理解JS的单线程?","slug":"如何理解js的单线程","link":"#如何理解js的单线程","children":[]},{"level":3,"title":"说一下 JS 异步解决方案发展历程","slug":"说一下-js-异步解决方案发展历程","link":"#说一下-js-异步解决方案发展历程","children":[]},{"level":3,"title":"Promise缺点","slug":"promise缺点","link":"#promise缺点","children":[]},{"level":3,"title":"await后面接什么？","slug":"await后面接什么","link":"#await后面接什么","children":[]},{"level":3,"title":"catch，能不能模拟then效果","slug":"catch-能不能模拟then效果","link":"#catch-能不能模拟then效果","children":[]},{"level":3,"title":"代码输出结果","slug":"代码输出结果","link":"#代码输出结果","children":[]}]}],"relativePath":"js/异步处理.md","lastUpdated":1678169176000}'),y={name:"js/异步处理.md"},F=l("",241),i=[F];function A(b,u,C,m,d,E){return a(),n("div",null,i)}const v=s(y,[["render",A]]);export{g as __pageData,v as default};
